stages:
  - build
  - deploy
  - robot
  - test
  - repos
  - cleanup

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

.werf:
  before_script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)


.build:
  extends: .werf
  stage: build
  script:
    - werf build-and-publish
  except:
    - schedules
  tags:
    - shell
  variables:
    GIT_STRATEGY: fetch
    WERF_STAGES_STORAGE: ":local"

build:
  extends: .build
  only:
    - branches
  variables:
    WERF_TAG_GIT_COMMIT: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

build_master:
  extends: .build
  only:
    - master
  variables:
    WERF_TAG_GIT_BRANCH: $CI_COMMIT_REF_SLUG

build_tag:
  extends: .build
  only:
    - tags
  variables:
    WERF_TAG_GIT_TAG: $CI_COMMIT_TAG

add to repo:
  stage: repos
  tags:
    - repo-staging
  script:
    - echo "Who run user = ${GITLAB_USER_NAME} ; email = ${GITLAB_USER_EMAIL} ; login =  ${GITLAB_USER_LOGIN} ;"
    - 'curl --header "PRIVATE-TOKEN: $API_TOKEN_REPO_STAGING" https://git.prozorro.gov.ua/api/v4/projects/$CI_PROJECT_ID/repository/archive?sha=$CI_COMMIT_SHORT_SHA -o ~/pkg/$CI_PROJECT_NAME-$CI_COMMIT_TAG.tar.gz'
    - 'curl --header "PRIVATE-TOKEN: $API_TOKEN_REPO_STAGING" https://git.prozorro.gov.ua/api/v4/projects/$CI_PROJECT_ID/repository/archive.zip?sha=$CI_COMMIT_SHORT_SHA -o ~/pkg/$CI_PROJECT_NAME-$CI_COMMIT_TAG.zip'
  only:
    - /^v?([0-9]{1}).([0-9]{1})/
  variables:
    GIT_STRATEGY: none

cleanup:
  extends: .werf
  stage: cleanup
  script:
    - docker login -u $WERF_IMAGES_CLEANUP_USERNAME -p $WERF_IMAGES_CLEANUP_PASSWORD $WERF_IMAGES_REPO
    - werf cleanup
  only:
    - schedules
  tags:
    - shell
  variables:
    WERF_STAGES_STORAGE: ":local"

.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm repo add prozorro $REPO_URL
    - helm repo update
    - helm upgrade $CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=$TAG --wait --debug
  dependencies:
    - build
  tags:
    - shell
  variables:
    TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: start
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: stop_review
  dependencies:
    - build
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

deploy_master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
  dependencies:
    - build
  only:
    - master
  except:
    - schedules

robot_tests:
  stage: robot
  script:
    - curl "$JENKINS_URL/buildWithParameters?token=$JENKINS_TOKEN&cause=$CI_COMMIT_REF_SLUG&RELEASE_NAME=$CI_COMMIT_REF_SLUG&API_VERSION=2.5"
    - echo $JENKINS_URL
  tags:
    - shell
  only:
    - branches
  dependencies:
    - review
  except:
    - schedules
  when: manual

stop_review:
  stage: deploy
  script:
    - helm delete $CI_COMMIT_REF_SLUG --purge
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.setuptools:
  image: python:2.7
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  variables:
    GIT_STRATEGY: clone
  only:
    - branches
  except:
    - schedules
  before_script:
    - apt-get update
    - apt-get install -y libsodium-dev
    - pip install --upgrade pip setuptools
    - echo '127.0.0.1  couchdb' >> /etc/hosts

test:
  extends: .setuptools
  script:
    - python setup.py test
  when: manual

docs:
  extends: .setuptools
  script:
    - python setup.py test --addopts="docs/tests --color=yes"
    - (set -e; [[ $(git diff) ]] && { git diff; exit 1; } || exit 0)
  variables:
    KUBERNETES_CPU_REQUEST: 3000m
    KUBERNETES_MEMORY_REQUEST: 4Gi

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  except:
    - schedules
  dependencies:
    - build
  before_script:
    - echo '127.0.0.1  couchdb' >> /etc/hosts
  script:
    - cd /app
    - py.test $TESTS_PATH --cov=$COV_PATH --cov-config=$COV_FILE -v --color=yes --dist=each
      --tx=popen//id=sand//env:DB_NAME=test_sandbox//env:SANDBOX_MODE=1//env:SINGLE_APP=1//env:DEFAULT_RELEASE_2020_04_19=2020-10-01
      --tx=popen//id=prod//env:DB_NAME=test_prod//env:SANDBOX_MODE=//env:SINGLE_APP=1//env:DEFAULT_RELEASE_2020_04_19=2020-10-01
      --tx=popen//id=sand_relsease_2020_04_19//env:DB_NAME=test_sandbox_2020_04_19//env:SANDBOX_MODE=1//env:SINGLE_APP=1//env:DEFAULT_RELEASE_2020_04_19=2020-01-01
      --tx=popen//id=prod_relsease_2020_04_19//env:DB_NAME=test_prod_2020_04_19//env:SANDBOX_MODE=//env:SINGLE_APP=1//env:DEFAULT_RELEASE_2020_04_19=2020-01-01
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  retry:
    max: 2
    when: runner_system_failure
  variables:    
    KUBERNETES_CPU_REQUEST: 3000m
    KUBERNETES_MEMORY_REQUEST: 768Mi

test_relocation_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/relocation/api/tests
    COV_PATH: src/openprocurement/relocation/api
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 700m
    KUBERNETES_MEMORY_REQUEST: 1100Mi     

test_tender_esco:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/esco/tests
    COV_PATH: src/openprocurement/tender/esco
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1500Mi       
    

test_tender_openeu:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openeu/tests
    COV_PATH: src/openprocurement/tender/openeu
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 1500m    

test_tender_cfaua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/cfaua/tests
    COV_PATH: src/openprocurement/tender/cfaua
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 1500m

test_tender_comp_stage2:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/competitivedialogue/tests/stage2
    COV_PATH: src/openprocurement/tender/competitivedialogue/
    COV_FILE: src/openprocurement/tender/competitivedialogue/tests/stage2/.coveragerc
    KUBERNETES_MEMORY_REQUEST: 1600Mi      

test_tender_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/core/tests
    COV_PATH: src/openprocurement/tender/core
    COV_FILE: .coveragerc

test_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/api/tests
    COV_PATH: src/openprocurement/api
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1100Mi 
    KUBERNETES_CPU_REQUEST: 500m   

test_agreement_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/agreement/core/tests
    COV_PATH: src/openprocurement/agreement/core
    COV_FILE: .coveragerc

test_agreement_cfaua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/agreement/cfaua/tests
    COV_PATH: src/openprocurement/agreement/cfaua
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 1500m

test_contracting_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/contracting/api/tests
    COV_PATH: src/openprocurement/contracting/api
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1200Mi 
    KUBERNETES_CPU_REQUEST: 500m    
    

test_planning_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/planning/api/tests
    COV_PATH: src/openprocurement/planning/api
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1000Mi 
    KUBERNETES_CPU_REQUEST: 1000m    

test_historical_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/historical/core/tests
    COV_PATH: src/openprocurement/historical/core
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 500Mi 
    KUBERNETES_CPU_REQUEST: 500m    

test_historical_tender:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/historical/tender/tests
    COV_PATH: src/openprocurement/historical/tender
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 500Mi 
    KUBERNETES_CPU_REQUEST: 500m 

test_tender_comp_stage1:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/competitivedialogue/tests/stage1
    COV_PATH: src/openprocurement/tender/competitivedialogue/
    COV_FILE: src/openprocurement/tender/competitivedialogue/tests/stage1/.coveragerc
    KUBERNETES_MEMORY_REQUEST: 1600Mi 
    KUBERNETES_CPU_REQUEST: 3000m       


test_tender_limited:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/limited/tests
    COV_PATH: src/openprocurement/tender/limited
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 600m

test_tender_openua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openua/tests
    COV_PATH: src/openprocurement/tender/openua
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1400Mi
  
test_tender_belowthreshold:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/belowthreshold/tests
    COV_PATH: src/openprocurement/tender/belowthreshold
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 600m
    
test_tender_openuadefense:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openuadefense/tests
    COV_PATH: src/openprocurement/tender/openuadefense
    COV_FILE: .coveragerc
    KUBERNETES_CPU_REQUEST: 1800m       

test_tender_cfaselectionua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/cfaselectionua/tests
    COV_PATH: src/openprocurement/tender/cfaselectionua
    COV_FILE: .coveragerc
    KUBERNETES_MEMORY_REQUEST: 1200Mi 
    KUBERNETES_CPU_REQUEST: 2500m       
